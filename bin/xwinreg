#!/usr/bin/env bash

# -- DEBUGGING.

#printf '%s (%s)\n' "$BASH_VERSION" "${BASH_VERSINFO[5]}" && exit 0
#set -o xtrace #; exec 2>> ~/xwinreg.log
#set -o verbose
#set -o noexec
#set -o errexit
#set -o nounset
#set -o pipefail
#trap '(read -p "[$BASH_SOURCE:$LINENO] $BASH_COMMAND?")' DEBUG

# -- SETTINGS.

#declare vars_base=$(set -o posix ; set)

# -- FUNCTIONS.

__xwr_xwinreg_version() { echo "0.1.9.6" ; }

__xwr_xwinreg_usage()
{
    printf 'xwinreg
        [-I]
        [-C|-T|-n|-N|-a|-fx|-fy|-fw|-fh|-wx|-wy|-ww|-wh]
        (-c|-f|-H|-h|[-l ...|-L ...]|-M|-v|-y)'
}

__xwr_xwinreg_help()
{
    printf "$(__xwr_xwinreg_usage)

OPTIONS
-------
    OPT                             ARG
    ---                             ---
    -a,  --frame-alias=             <FRAMEALIAS>
    -C,  --conf-file=               <FILE>
    -fh, --frame-height=            <PX>
    -fw, --frame-width=             <PX>
    -fx, --frame-x=                 <PX>
    -fy, --frame-y=                 <PX>
    -h,  --help
    -I,  --input-file=              <FILE> or hyphen (-)
    -N,  --number-of-cols=          <INT>
    -n,  --number-of-rows=          <INT>
    -T,  --tmp-file=                <FILE>
    -v,  --version
    -wh, --workarea-height=         <PX>
    -ww, --workarea-width=          <PX>
    -wx, --workarea-x=              <PX>
    -wy, --workarea-y=              <PX>

SUBCOMMANDS
-----------
    ACTION                          REQUIRED
    ------                          --------
    -c,  --close                    <REG>
    -f,  --focus                    <REG>
    -H,  --hide                     <REG> <HACT>
    -l,  --layout                   <REGN> <WINN> <LACT> <LENT> <GRAV>
                                    <GEO>
    -M,  --move-to-desk             <REG> <DESK> -W
    -o,  --focus-toggle             <ODIREC>
    -y,  --cycle                    <REG> <YDIREC> -w -k -j

    ACTION                          ARG
    ------                          ---
    -L,  --layout-abbrev=           <REGN>,<WINN>,<LACT>,<LENT>:<GRAV>,
                                    <GEO>

    OPT                             ARG
    ---                             ---
    -A,  --action=                  ( <HACT> | <LACT> )
    -D,  --desk=                    <DESK>
    -d,  --direction=               ( <ODIREC> | <YDIREC>  )
    -e,  --entity=                  <LENT>
    -g,  --geo=                     <GEO>
    -G,  --gravity=                 <GRAV>
    -j,  --join
    -k,  --stack
    -r,  --region=                  ( <REG> | <REGN> )
    -W,  --switch
    -w,  --window
    -x,  --maximum=                 <WINN>

ARGUMENTS
---------
    <DESK>          'curr' or relative to the current desktop 'next' or
                    'preview'. To specify a desktop number (starts at 0)
                    use the prefix 'i:'; a desktop name is prefixed with
                    's:'. Examples: 'i:1'; 's:web'; '\"s:some stuff\"'.
    <FILE>          Regular file or named pipe.
    <FRAMEALIAS>    'northwest', 'north', 'northeast', 'east',
                    'southeast', 'south', 'southwest' or 'west'.
    <GEO>
                    <X>        Pixel x size specified by an integer.
                    <Y>        Pixel y size specified by an integer.
                    <W>        Pixel width size specified by an integer.
                    <H>        Pixel height size specified by an integer.
                    <PRO>      Procent size specified by an integer.
                    <REGALIAS> 'northwest', 'north', 'northeast','east',
                               'southeast', 'south', 'southwest' or
                               'west'.
                    Samples:
                               '<REGALIAS>',
                               '<PRO>,<PRO>,<PRO>,<PRO>',
                               '<X>,<Y>,<W>,<H>'.
    <GRAV>          'northwest', 'north', 'northeast', 'west', 'center',
                    'east', 'southwest', 'south', 'southeast' or
                    'static'. Additional: '[0-10]'.
    <HACT>          'add' or 'remove'.
    <INT>           Default is '2'.
    <LACT>          'maximize', 'horizontal', 'vertical',
                    'grid-horizontal', 'grid-vertical',
                    'grid-square-horizontal' or 'grid-square-vertical'.
    <LENT>          'alias', 'px' or 'pro'.
    <ODIREC>        'next' or 'preview'.
    <PX>            Pixel size specified by an integer.
    <REF>           'window', 'region' or 'frame'.
    <REG>           Up to this sample: '1', '1,3', '1-3' or '1,2-3'.
                    Additional: 'active' or 'all'.
    <REGN>          Region number specified by an integer.
    <WINN>          Window number specified by an integer or 'max'.
    <YDIREC>        'clock', 'anticlock' or 'reverse'.
"
}

__xwr_xwinreg_check_args()
{
    declare o=
    if [[ ! $OPTARG =~ -.+ ]]
    then
        for o
        do
            declare -gr "$o"
        done
    else
        { printf '%s\n' "Option -${opt} requires an argument." >&2 ; exit 1 ; }
    fi
}

# -- MAIN.

(($# == 0)) && { printf '%s\n' "USAGE: $(__xwr_xwinreg_usage)" >&2 ; exit 1 ; }

declare \
        arg= \
        args= \
        delim=

for arg
do
    arg=${arg#--}
    case $arg in
        action)             args="${args}-A ${arg#*=} "             ;;
        "")                 args="${args}-- "                       ;;
        close)              args="${args}-c "                       ;;
        conf-file=*)        args="${args}-C ${arg#*=} "             ;;
        cycle)              args="${args}-y "                       ;;
        desk)               args="${args}-D ${arg#*=} "             ;;
        direction=*)        args="${args}-d ${arg#*=} "             ;;
        entity)             args="${args}-e ${arg#*=} "             ;;
        -fh)                args="${args}-2 "                       ;;
        focus)              args="${args}-f "                       ;;
        focus-toggle)       args="${args}-o "                       ;;
        frame-alias=*)      args="${args}-a ${arg#*=} "             ;;
        frame-height=*)     args="${args}-2 ${arg#*=} "             ;;
        frame-width=*)      args="${args}-1 ${arg#*=} "             ;;
        frame-x=*)          args="${args}-3 ${arg#*=} "             ;;
        frame-y=*)          args="${args}-4 ${arg#*=} "             ;;
        -fw)                args="${args}-1 "                       ;;
        -fx)                args="${args}-3 "                       ;;
        -fy)                args="${args}-4 "                       ;;
        geo)                args="${args}-g ${arg#*=} "             ;;
        gravity)            args="${args}-G ${arg#*=} "             ;;
        help)               args="${args}-h "                       ;;
        hide)               args="${args}-H "                       ;;
        input-file=*)       args="${args}-I ${arg#*=} "             ;;
        join)               args="${args}-j "                       ;;
        layout-abbrev=*)    args="${args}-L ${arg#*=} "             ;;
        layout)             args="${args}-l "                       ;;
        maximum)            args="${args}-x ${arg#*=} "             ;;
        move-to-desk)       args="${args}-M "                       ;;
        number-of-cols=*)   args="${args}-N ${arg#*=} "             ;;
        number-of-rows=*)   args="${args}-n ${arg#*=} "             ;;
        region=*)           args="${args}-r ${arg#*=} "             ;;
        stack)              args="${args}-k "                       ;;
        switch)             args="${args}-W "                       ;;
        tmp-file=*)         args="${args}-T ${arg#*=} "             ;;
        version)            args="${args}-v "                       ;;
        -wh)                args="${args}-8 "                       ;;
        window)             args="${args}-w "                       ;;
        workarea-height=*)  args="${args}-8 ${arg#*=} "             ;;
        workarea-width=*)   args="${args}-7 ${arg#*=} "             ;;
        workarea-x=*)       args="${args}-5 ${arg#*=} "             ;;
        workarea-y=*)       args="${args}-6 ${arg#*=} "             ;;
        -ww)                args="${args}-7 "                       ;;
        -wx)                args="${args}-5 "                       ;;
        -wy)                args="${args}-6 "                       ;;
        *)                  [[ ${arg:0:1} != - ]] && delim=\"
                            args="${args}${arg} "
                            delim=
                            ;;
    esac
done

declare \
        action= \
        col_number= \
        file_conf= \
        file_input= \
        file_tmp= \
        frame_alias= \
        frame_height= \
        frame_width= \
        frame_x= \
        frame_y= \
        opt= \
        row_number= \
        workarea_height= \
        workarea_width= \
        workarea_x= \
        workarea_y=

eval set -- $args

while getopts :1:2:3:4:5:6:7:8:a:A:cC:d:D:e:fg:G:hHI:jklLm:Mn:N:or:T:vwWx:y opt $args
do
    case $opt in
        a)      __xwr_xwinreg_check_args "frame_alias=$OPTARG" ;        shift 2 ;;
        A|D|d|e|g|G|j|k|r|W|w|x) : ;                                    shift 0 ;;
        c)      action=close ;                                          shift 1 ;;
        C)      __xwr_xwinreg_check_args "XWINREG_CONF_FILE=$OPTARG" ;  shift 2 ;;
        f)      action=focus ;                                          shift 1 ;;
        h)      action=help ;                                           shift 1 ;;
        H)      action=hide ;                                           shift 1 ;;
        I)      __xwr_xwinreg_check_args "XWINREG_INPUT_FILE=$OPTARG" ; shift 2 ;;
        L)      action=layout-abbrev ;                                  shift 0 ;;
        l)      action=layout ;                                         shift 0 ;;
        M)      action=move-to-desk ;                                   shift 1 ;;
        N)      __xwr_xwinreg_check_args "col_number=$OPTARG" ;         shift 2 ;;
        n)      __xwr_xwinreg_check_args "row_number=$OPTARG" ;         shift 2 ;;
        o)      action=focus-toggle ;                                   shift 1 ;;
        T)      __xwr_xwinreg_check_args "XWINREG_TMP_FILE=$OPTARG" ;   shift 2 ;;
        v)      action=version ;                                        shift 1 ;;
        y)      action=cycle ;                                          shift 1 ;;
        1)      __xwr_xwinreg_check_args "frame_width=$OPTARG" ;        shift 2 ;;
        2)      __xwr_xwinreg_check_args "frame_height=$OPTARG" ;       shift 2 ;;
        3)      __xwr_xwinreg_check_args "frame_x=$OPTARG" ;            shift 2 ;;
        4)      __xwr_xwinreg_check_args "frame_y=$OPTARG" ;            shift 2 ;;
        5)      __xwr_xwinreg_check_args "workarea_x=$OPTARG" ;         shift 2 ;;
        6)      __xwr_xwinreg_check_args "workarea_y=$OPTARG" ;         shift 2 ;;
        7)      __xwr_xwinreg_check_args "workarea_width=$OPTARG" ;     shift 2 ;;
        8)      __xwr_xwinreg_check_args "workarea_height=$OPTARG" ;    shift 2 ;;
        \?)     printf '%s\n' "Unknown flag: -${OPTARG}." >&2 ;         exit 1 ;;
    esac
done

[[ $XWINREG_CONF_FILE ]] &&
{
    file_conf=$XWINREG_CONF_FILE
    source "$file_conf" > /dev/null 2>&1
}

[[ $XWINREG_INPUT_FILE ]] &&
{
    file_input=$XWINREG_INPUT_FILE
    if [[ $file_input == - ]]
    then
        if [[ -p /dev/stdin ]]
        then
            while read -r
            do
                printf '%s\n' "$REPLY"
            done | xwinreg-id -I -
        else
            { echo "Stdin is not coming from a pipe." >&2 ; exit 1 ; }
        fi
    else
        if [[ -p $file_input || -f $file_input ]]
        then
            xwinreg-id -I "$file_input"
        else
            { echo "File does not exist or is neather a regular file nor a named pipe." >&2 ; exit 1 ; }
        fi
    fi
}

file_tmp=${XWINREG_TMP_FILE:-"${TMPDIR:-/tmp}/xwinreg_default.tmp"}

case $action in
    close)
            xwinreg-close -T "$file_tmp" "$@" && xwinreg-layout -T "$file_tmp"
            ;;
    cycle)
            xwinreg-cycle -T "$file_tmp" "$@"
            xwinreg-layout -T "$file_tmp"
            ;;
    focus)
            xwinreg-focus -T "$file_tmp" "$@"
            ;;
    focus-toggle)
            xwinreg-focus-toggle -T "$file_tmp" "$@"
            ;;
    help)
            __xwr_xwinreg_help
            ;;
    hide)
            xwinreg-hide -T "$file_tmp" "$@"
            ;;
    layout|layout-abbrev)
            xwinreg-calculate -T "$file_tmp" ${file_conf:+-C${file_conf}} ${frame_alias:+-a${frame_alias}} ${frame_height:+-2${frame_height}} ${frame_width:+-1${frame_width}} ${frame_x:+-3${frame_x}} ${frame_y:+-4${frame_y}} ${workarea_height:+-8${workarea_height}} ${workarea_width:+-7${workarea_width}} ${workarea_x:+-5${workarea_x}} ${workarea_y:+-6${workarea_y}} ${col_number:+-N${col_number}} ${row_number:+-n${row_number}}
            xwinreg-layout -T "$file_tmp" "$@"
            ;;
    move-to-desk)
            xwinreg-move-to-desk -T "$file_tmp" "$@"
            ;;
    version)
            __xwr_xwinreg_version
            ;;
    *)
            { echo "No valid action spezified." >&2 ; exit 1 ; }
            ;;
esac

#~ unset -v \
         #~ action= \
         #~ arg \
         #~ args \
         #~ col_number= \
         #~ delim \
         #~ file_conf= \
         #~ file_input= \
         #~ file_tmp= \
         #~ frame_alias= \
         #~ frame_height= \
         #~ frame_width= \
         #~ frame_x= \
         #~ frame_y= \
         #~ opt= \
         #~ row_number= \
         #~ workarea_height= \
         #~ workarea_width= \
         #~ workarea_x= \
         #~ workarea_y=

exit 0
