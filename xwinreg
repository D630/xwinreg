#!/usr/bin/env bash

#printf '%s (%s)\n' "$BASH_VERSION" "${BASH_VERSINFO[5]}" && exit 0
#set -o xtrace #; exec 2>> ~/xwinreg.log
#set -o verbose
#set -o noexec
#set -o errexit
#set -o nounset
#set -o pipefail
#trap '(read -p "[$BASH_SOURCE:$LINENO] $BASH_COMMAND?")' DEBUG

declare \
        vars_base=$(set -o posix ; set) \
        src_dir=~/code/source/xwinreg/src

__src_script() { declare f ; for f ; do source "${src_dir}/xwinreg_${f}" ; done ; }

(($# == 0)) &&
{
    __src_script usage
    printf '%s\n' "USAGE: $(__usage)" >&2 ; exit 1
}

declare \
        arg= \
        args= \
        delim=

for arg
do
    arg=${arg#--}
    case $arg in
        file=*)
                args="${args}-F ${arg#*=} "
                ;;
        conf-file=*)
                args="${args}-C ${arg#*=} "
                ;;
        tmp-file=*)
                args="${args}-T ${arg#*=} "
                ;;
        number-of-rows=*)
                args="${args}-n ${arg#*=} "
                ;;
        number-of-cols=*)
                args="${args}-N ${arg#*=} "
                ;;
        frame-alias=*)
                args="${args}-a ${arg#*=} "
                ;;
        frame-width=*)
                args="${args}-1 ${arg#*=} "
                ;;
        -fw)
                args="${args}-1 "
                ;;
        frame-height=*)
                args="${args}-2 ${arg#*=} "
                ;;
        -fh)
                args="${args}-2 "
                ;;
        frame-x=*)
                args="${args}-3 ${arg#*=} "
                ;;
        -fx)
                args="${args}-3 "
                ;;
        frame-y=*)
                args="${args}-4 ${arg#*=} "
                ;;
        -fy)
                args="${args}-4 "
                ;;
        workarea-x=*)
                args="${args}-5 ${arg#*=} "
                ;;
        -wx)
                args="${args}-5 "
                ;;
        workarea-y=*)
                args="${args}-6 ${arg#*=} "
                ;;
        -wy)
                args="${args}-6 "
                ;;
        workarea-width=*)
                args="${args}-7 ${arg#*=} "
                ;;
        -ww)
                args="${args}-7 "
                ;;
        workarea-height=*)
                args="${args}-8 ${arg#*=} "
                ;;
        -wh)
                args="${args}-8 "
                ;;
        cycle)
                args="${args}-y "
                ;;
        region=*)
                args="${args}-r ${arg#*=} "
                ;;
        direction=*)
                args="${args}-d ${arg#*=} "
                ;;
        stack)
                args="${args}-k "
                ;;
        join)
                args="${args}-j "
                ;;
        window)
                args="${args}-w "
                ;;
        toggle-focus=*)
                args="${args}-o ${arg#*=} "
                ;;
        help)
                args="${args}-h "
                ;;
        version)
                args="${args}-v "
                ;;
        layout-abbrev=*)
                args="${args}-L ${arg#*=} "
                ;;
        layout)
                args="${args}-l "
                ;;
        hide)
                args="${args}-H "
                ;;
        unhide)
                args="${args}-U "
                ;;
        close)
                args="${args}-c "
                ;;
        move-to-desk)
                args="${args}-M "
                ;;
        focus)
                args="${args}-f "
                ;;
        desk)
                args="${args}-D ${arg#*=} "
                ;;
        switch)
                args="${args}-W "
                ;;
        entity)
                args="${args}-e ${arg#*=} "
                ;;
        reference)
                args="${args}-R ${arg#*=} "
                ;;
        geo)
                args="${args}-g ${arg#*=} "
                ;;
        maximum)
                args="${args}-x ${arg#*=} "
                ;;
        gravity)
                args="${args}-G ${arg#*=} "
                ;;
        action)
                args="${args}-A ${arg#*=} "
                ;;
        "")
                args="${args}-- "
                ;;
       *)
                [[ ${arg:0:1} != - ]] && delim='"'
                args="${args}${delim}${arg}${delim} "
                delim=
                ;;
    esac
done

declare \
        desk_curr= \
        win_active= \
        win_active_frame_extents= \
        win_active_tags= \
        win_number= \
        file_tmp= \
        file_input= \
        file_conf= \
        row_number= \
        col_number= \
        frame_alias= \
        workarea_x= \
        workarea_y= \
        workarea_width= \
        workarea_height= \
        frame_width= \
        frame_height= \
        frame_x= \
        frame_y= \
        region_selection= \
        direction_cycle= \
        direction_focus= \
        join= \
        stack= \
        entity_cycle=
        action= \
        hide_action= \
        desk_target= \
        switch_to_desk_target= \
        entity= \
        entity_size= \
        reference= \
        geo= \
        direction_moving= \
        win_number_maximum= \
        gravity= \
        layout_action= \
        reg_number=0

declare -a \
        desk_select=() \
        win_active_geo_x_y=() \
        win_active_geo_w_h=() \
        win_xid=() \
        win_geo_x_y=() \
        win_geo_w_h=() \
        win_frame_extents=() \
        win_tags=()

declare -A layout

__src_script \
        check_args \
        build_layout_abbrev

eval set -- $args
declare opt=

while getopts :F:C:T:n:N:a:1:2:3:4:5:6:7:8:yr:d:kjwo:hvL:lHUcMfsmOD:We:R:g:x:G:A: opt
do
    case $opt in
        F)
                if [[ ! $OPTARG =~ -.+ ]]
                then
                    XWINREG_INPUT_FILE=$OPTARG
                else
                    { echo "Option -${opt} requires an argument." >&2 ; exit 1 ; }
                fi
                ;;
        C)
                __check_args "XWINREG_CONF_FILE=$OPTARG"
                ;;
        T)
                __check_args "XWINREG_TMP_FILE=$OPTARG"
                ;;
        n)
                __check_args "row_number=$OPTARG"
                ;;
        N)
                __check_args "col_number=$OPTARG"
                ;;
        a)
                __check_args "frame_alias=$OPTARG"
                ;;
        1)
                __check_args "frame_width=$OPTARG"
                ;;
        2)
                __check_args "frame_height=$OPTARG"
                ;;
        3)
                __check_args "frame_x=$OPTARG"
                ;;
        4)
                __check_args "frame_y=$OPTARG"
                ;;
        5)
                __check_args "workarea_x=$OPTARG"
                ;;
        6)
                __check_args "workarea_y=$OPTARG"
                ;;
        7)
                __check_args "workarea_width=$OPTARG"
                ;;
        8)
                __check_args "workarea_height=$OPTARG"
                ;;
        y)
                action=cycle
                ;;
        r)
                __check_args "region_selection=$OPTARG"
                [[ $action == layout ]] && layout[${region_selection}:region_number]=$region_selection
                ;;
        d)
                [[ $action == cycle ]] && __check_args "direction_cycle=$OPTARG"
                [[ $action == __check_moving ]] && __check_args "direction_moving=$OPTARG"
                ;;
        k)
                stack=stack
                ;;
        j)
                join=join
                ;;
        w)
                [[ $action == cycle ]] && __check_args "entity_cycle=window"
                [[ $action == __check_moving || $action == __check_sizing ]] && __check_args "entity=window"
                ;;
        o)
                __check_args "action=__focus_toggle" "direction_focus=$OPTARG"
                ;;
        h)
                action=__help
                ;;
        v)
                action=__version
                ;;
        L)
                __check_args "action=layout_abbrev" && __build_layout_abbrev "$OPTARG"
                ;;
        l)
                action=layout
                ((reg_number++))
                ;;
        H)
                action=__check_hiding
                hide_action=add
                ;;
        U)
                action=__check_hiding
                hide_action=remove
                ;;
        c)
                action=__check_closing
                ;;
        M)
                action=__check_move_to_desk
                ;;
        f)
                action=__check_focusing
                ;;
        D)
                __check_args "desk_target=$OPTARG"
                ;;
        W)
                switch_to_desk_target=switch_to_desk_target
                ;;
        e)
                __check_args "entity_size=$OPTARG"
                [[ $action == layout ]] && layout[${region_selection}:entity_region]=$entity_size
                ;;
        R)
                __check_args "reference=$OPTARG"
                ;;
        g)
                __check_args "geo=$OPTARG"
                [[ $action == layout ]] && layout[${region_selection}:region_geo]=$geo
                ;;
        x)
                __check_args "win_number_maximum=$OPTARG"
                layout[${region_selection}:win_number_maximum]=$win_number_maximum
                ;;
        G)
                __check_args "gravity=$OPTARG"
                layout[${region_selection}:gravity]=$gravity
                ;;
        A)
                __check_args "layout_action=$OPTARG"
                layout[${region_selection}:layout_action]=$layout_action
                ;;
        \?)
                { echo "Unknown option: -${OPTARG}." >&2 ; exit 1 ; }
                ;;
        \:)
                { echo "Option -${OPTARG} requires an argument." >&2 ; exit 1 ; }
                ;;
    esac
done

[[ $XWINREG_CONF_FILE ]] &&
{
    if [[ -f $XWINREG_CONF_FILE ]]
    then
        file_conf=$XWINREG_CONF_FILE
        source "$XWINREG_CONF_FILE"
    else
        { echo "Conf File does not exist or is not a regular file." >&2 ; exit 1 ; }
    fi
}

[[ $XWINREG_INPUT_FILE ]] &&
{
    file_input=$XWINREG_INPUT_FILE
    __src_script check_variables_input
    if [[ $XWINREG_INPUT_FILE == - ]]
    then
        if [[ -p /dev/stdin ]]
        then
            while read -r
            do
                __check_variables_input "$REPLY"
            done
        else
            { echo "Stdin is not coming from a pipe." >&2 ; exit 1 ; }
        fi
    else
        if [[ -p $XWINREG_INPUT_FILE || -f $XWINREG_INPUT_FILE ]]
        then
            while read -r
            do
                __check_variables_input "$REPLY"
            done < "$XWINREG_INPUT_FILE"
        else
            { echo "File does not exist or is neather a regular file nor a named pipe." >&2 ; exit 1 ; }
        fi
    fi
}

if [[ $XWINREG_TMP_FILE ]]
then
    file_tmp=$XWINREG_TMP_FILE
else
    file_tmp=${TMPDIR:-/tmp}/xwinreg_default.tmp
fi

unset -v arg args delim opt

if [[ $action ]]
then
    case $action in
        layout|layout_abbrev)
                ((win_number <= 1)) && { echo "Insufficient windows to work with." >&2 ; exit 1 ; }
                unset -v action
                __src_script calculating mktmp
                __calculating
                __mktmp
                ${src_dir}/xwinreg_check_region "$file_tmp" && exit 0
                ;;
        __focus_toggle)
                unset -v action
                ${src_dir}/xwinreg_focus_toggle "$file_tmp" "$direction_focus" && exit 0
                ;;
        cycle)
                unset -v action
                ${src_dir}/xwinreg_cycle "$entity_cycle" "$file_tmp" "$region_selection" "$direction_cycle" "$stack" "$join" && exit 0
                ;;
        __check_closing)
                unset -v action
                ${src_dir}/xwinreg_close "$file_tmp" "$region_selection" && exit 0
                ;;
        __check_hiding)
                unset -v action
                ${src_dir}/xwinreg_hide "$file_tmp" "$region_selection" "$hide_action" && exit 0
                ;;
        __check_focusing)
                unset -v action
                ${src_dir}/xwinreg_focus "$file_tmp" "$region_selection" && exit 0
                ;;
        __check_move_to_desk)
                unset -v action
                ${src_dir}/xwinreg_move_to_desk "$file_tmp" "$region_selection" "$desk_target" "$switch_to_desk_target" && exit 0
                ;;
        __help)
                __src_script help
                __help && exit 0
                ;;
        __version)
                __src_script version
                __version && exit 0
                ;;
        *)
                __src_script calculating "${action#__*}"
                __calculating
                ${action} && exit 0
                ;;
    esac
else
    { echo "No action spezified." >&2 ; exit 1 ; }
fi
