#!/usr/bin/env bash

__check_moving()
{
    __check_region_selection

    if [[ $entity == window ]]
    then
        for region_number in "${layout_numbers[@]}"
        do
            eval win_xid_tmp=('${win_xid_region_'${region_number}'[@]}')
            eval win_geo_x_y_tmp=('${win_geo_x_y_region_'${region_number}'[@]}')
            eval win_geo_w_h_tmp=('${win_geo_w_h_region_'${region_number}'[@]}')
            eval region_geo_tmp=('${region_'${region_number}'__geo[@]}')
            eval region_action_tmp='${region_'${region_number}'__action}'

            for i in "${!win_xid_tmp[@]}"
            do
                case $entity_size in
                    px)
                            if [[ ${geo%,*} == - ]]
                            then
                                x=${win_geo_x_y_tmp[i]%,*}
                            else
                                x=${geo%,*}
                            fi

                            if [[ ${geo#*,} == - ]]
                            then
                                y=${win_geo_x_y_tmp[i]#*,}
                            else
                                y=${geo#*,}
                            fi
                            ;;
                    pro)
                            case $reference in
                                window)
                                        case $direction_moving in
                                            north)
                                                    x=${win_geo_x_y_tmp[i]%,*}
                                                    y=$((${win_geo_x_y_tmp[i]#*,}-(${win_geo_w_h_tmp[i]#*,}*geo/100)))
                                                    ;;
                                            east)
                                                    x=$((${win_geo_x_y_tmp[i]%,*}+(${win_geo_w_h_tmp[i]%,*}*geo/100)))
                                                    y=${win_geo_x_y_tmp[i]#*,}
                                                    ;;
                                            south)
                                                    x=${win_geo_x_y_tmp[i]%,*}
                                                    y=$((${win_geo_x_y_tmp[i]#*,}+(${win_geo_w_h_tmp[i]#*,}*geo/100)))
                                                    ;;
                                            west)
                                                    x=$((${win_geo_x_y_tmp[i]%,*}-(${win_geo_w_h_tmp[i]%,*}*geo/100)))
                                                    y=${win_geo_x_y_tmp[i]#*,}
                                                    ;;
                                        esac
                                        ;;
                                region)
                                        case $direction_moving in
                                            north)
                                                    x=${win_geo_x_y_tmp[i]%,*}
                                                    y=$((${win_geo_x_y_tmp[i]#*,}-(${region_geo_tmp[3]}*geo/100)))
                                                    ;;
                                            east)
                                                    x=$((${win_geo_x_y_tmp[i]%,*}+(${region_geo_tmp[2]}*geo/100)))
                                                    y=${win_geo_x_y_tmp[i]#*,}
                                                    ;;
                                            south)
                                                    x=${win_geo_x_y_tmp[i]%,*}
                                                    y=$((${win_geo_x_y_tmp[i]#*,}+(${region_geo_tmp[3]}*geo/100)))
                                                    ;;
                                            west)
                                                    x=$((${win_geo_x_y_tmp[i]%,*}-(${region_geo_tmp[2]}*geo/100)))
                                                    y=${win_geo_x_y_tmp[i]#*,}
                                                    ;;
                                        esac
                                        ;;
                                frame)
                                        if [[ ${geo%,*} == - && ${geo#*,} == - ]]
                                        then
                                            x=${win_geo_x_y_tmp[i]%,*}
                                            y=${win_geo_x_y_tmp[i]#*,}
                                        elif [[ ! ${geo%,*} == - && ! ${geo#*,} == - ]]
                                        then
                                            x=$(((frame_x+frame_w)*${geo%,*}/100))
                                            y=$(((frame_y+frame_h)*${geo#*,}/100))
                                        elif [[ ${geo%,*} == - ]]
                                        then
                                            x=${win_geo_x_y_tmp[i]%,*}
                                            y=$(((frame_y+frame_h)*${geo#*,}/100))
                                        elif [[ ${geo#*,} == - ]]
                                        then
                                            x=$(((frame_x+frame_w)*${geo%,*}/100))
                                            y=${win_geo_x_y_tmp[i]#*,}
                                        fi
                                        ;;
                            esac
                            ;;
                esac

                w=${win_geo_w_h_tmp[i]%%,*}
                h=${win_geo_w_h_tmp[i]##*,}
                gravity=0
                win=${win_xid_tmp[i]}
                __do_wmctrl

                eval "win_geo_x_y_region_${region_number}__tmp+=(${x},${y})"
            done
        done

        # At the end we update new geo of windows and write those to file_tmp. So, we update just relating lines!
        for region_number in "${layout_numbers[@]}"
        do
            eval win_geo_x_y_region_tmp=('${win_geo_x_y_region_'${region_number}'__tmp[@]}')
            sed -i -e "/win_geo_x_y_region_${region_number}/c \win_geo_x_y_region_${region_number}=(${win_geo_x_y_region_tmp[*]})" "$file_tmp"
        done
    else
        __store_x_y_w_h

        i=0
        for region_number in "${layout_numbers[@]}"
        do
            layout_selection_tmp=${layout_selection[i]}
            eval entity_region_tmp='${region_'${region_number}'__entity}'
            [[ $entity_region_tmp =~ alias ]] && { IFS=',' read -r _ _ alias _ <<< "${layout_selection_tmp%%:*}" ; }

            eval region_geo=('${region_'${region_number}'__geo[@]}')
            region_x=${region_geo[0]}
            region_y=${region_geo[1]}
            region_w=${region_geo[2]}
            region_h=${region_geo[3]}

            case $entity_size in
                px)
                        if [[ ${geo%,*} == - ]]
                        then
                            x=$region_x
                        else
                            x=${geo%,*}
                        fi

                        if [[ ${geo#*,} == - ]]
                        then
                            y=$region_y
                        else
                            y=${geo#*,}
                        fi
                        ;;
                pro)
                        case $reference in
                            reg|region)
                                    case $direction_moving in
                                        north)
                                                x=$region_x
                                                y=$((region_y-(region_h*geo/100)))
                                                ;;
                                        east)
                                                x=$((region_x+(region_w*geo/100)))
                                                y=$region_y
                                                ;;
                                        south)
                                                x=$region_x
                                                y=$((region_y+(region_h*geo/100)))
                                                ;;
                                        west)
                                                x=$((region_x-(region_w*geo/100)))
                                                y=$region_y
                                                ;;
                                    esac
                                    ;;
                            frame)
                                    if [[ ${geo%,*} == - && ${geo#*,} == - ]]
                                    then
                                        x=$region_x
                                        y=$region_y
                                    elif [[ ! ${geo%,*} == - && ! ${geo#*,} == - ]]
                                    then
                                        x=$((frame_w*${geo%,*}/100))
                                        y=$((frame_h*${geo#*,}/100))
                                    elif [[ ${geo%,*} == - ]]
                                    then
                                        x=$region_x
                                        y=$((frame_h*${geo#*,}/100))
                                    elif [[ ${geo#*,} == - ]]
                                    then
                                        x=$((frame_w*${geo%,*}/100))
                                        y=$region_y
                                    fi
                                    ;;
                        esac
                        ;;
            esac

            w=$region_w
            h=$region_h

            IFS=':' read l_l l_r <<< "$layout_selection_tmp"
            set -- ${l_l//,/ }
            layout_modification+=(${1},${2},${3},px:${l_r%%,*},${x},${y},${w},${h})

            ((i++))
        done

        for ((region_number=1 ; region_number <= ${#layout[@]} ; region_number++))
        do
            declare -a "win_xid_region_${region_number}=()" "win_geo_x_y_region_${region_number}=()" "win_geo_w_h_region_${region_number}=()"
        done

        # Check, if some regions have not been selected and write those "old" to layout_modification, too.
        for old in "${layout[@]}"
        do
            for num in "${layout_numbers[@]}"
            do
                [[ $num == ${old%%,*} ]] && skip=1
            done
            ((skip)) || layout_modification+=( "$old" )
            skip=
        done

        mapfile -t layout < <(__order_num_asc_array "${layout_modification[@]}")

        __restore_x_y_w_h
        unset -v reg_geo

        # Here we do not update lines in file_tmp; we rewrite the hole Tmp File!
        __mktmp
        # After that, we build the new layout.
        __check_region
    fi
}
